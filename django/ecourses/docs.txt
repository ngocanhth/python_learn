# Python shell

python manage.py shell

from courses.models import *

c=Category(name='Lap trinh backend') ==> chu y ko co dau cach giua name=''

c.save()

Cách 2:

 Category.objects.create(name='Lập trình blockchain')
 Category.objects.get_or_create(name='Lập trình blockchain') => nếu có thì trart ko thì tạo
 Category.objects.update_or_create(name='Lập trình blockchain') => nếu có thì trart ko thì tạo

---
Tao khoa hoc

c = Category.objects.get(pk=1)
c.__dict__

Course.objects.create(subject='Lap trinh Python', description="Python cho nguoi moi bat dau", category=c)

Course.objects.create(subject='Phan tich du lieu voi Python', description="Lap trinh python data analytics", category=c)

Course.objects.create(subject='Lap trinh AI voi Python', description="Lap trinh AI voi python cho nguoi moi bat dau", category=c)

Course.objects.create(subject='Lap trinh frontend ket hop API Python Django', description="Reactjs voi API python", category=c)

c = Category.objects.get(pk=2)
Course.objects.create(subject='Lap trinh reactjs', description="Lap trinh reactjs tu co co ban den advanced", category=c)



Category.objects.filter(name__contains='frontend')
Category.objects.filter(name__startswith='Lap')
Category.objects.filter(name__endswith='blockchain')

====
xem cau SQL
======

c = Category.objects.filter(name__startswith='Lap')

print(c.query)

==============

Join table

Course.objects.all()

Lay tat ca khoa hoc ma ten danh muc co chua chu frontend

q = Course.objects.filter(category__name__contains="frontend")
q = Course.objects.filter(category__name__contains="backend")
q = Course.objects.filter(category__name__icontains="backend") ==> chu i la khong phan biet hoa thuong
q = Course.objects.filter(category__name__icontains="la")
q
print(q.query)

=========================
2. Meta Options
======================

SET_NULL => khoa ngoai xoa thi fiel con set la null
SET_DEFAULT => fiel con se co khoa ngoai la truong mac dinh
CASCADE => Xoa khoa chinh khoa ngoai xoa theo
PROTECT => Khong duoc xoa

==============
bAI 6
============
c = Course.objects.filter(pk=1)
muon in cau truy van phai dung filter
print(c.query)

c = Course.objects.get(pk=1)

Lesson.objects.create(subject='Bai 1 Kieu du lieu trong python', content='Noi dung bai hoc variabe trong python', course=c)

Lesson.objects.create(subject='Bai 2: Cau truc du lieu va giai thuat - phan 1', content='Mot so thuat toan nhu sap xep tron, sap xep noi bot, hashmap', course=c)

Lesson.objects.create(subject='Bai 3: Cau truc du lieu va giai thuat - phan 2', content='Mot so thuat toan nhu sap xep tron, sap xep noi bot, hashmap', course=c)

c = Course.objects.get(pk=2)

Lesson.objects.create(subject='Bai 1: Ly thuyet ve du lieu', content='Lich su phan tich du lieu la gi ...', course=c)

===================
many to one
xem trong khoa hoc co bao nhieu bai hoc

c = Course.objects.get(pk=1)
c.lesson_set.all()

neu khong muon lay lesson_set thi thay related_name="lessons" trong model cua lesson
c = Course.objects.get(pk=1)
c.lessons.all()

Join: Lay tat ca cac bai hoc ma co subject cua khoa hoc bao gom ten python (khong phan biet chu hoa chua thuong)

Lesson.objects.filter(course__subject__icontains="python")
Lesson.objects.filter(course__subject__icontains="du lieu")
Lesson.objects.filter(course__subject__icontains="voi")

Lay tat ca khoa hoc ma con co bai hoc dang active

 Course.objects.filter(lessons__active=True)

===========
many to many

t = Tag.objects.create(name='python')
t = Tag.objects.create(name = "reactjs")
t = Tag.objects.create(name = "frontend")
t = Tag.objects.create(name = "giai thuat")


t = Tag.objects.get(name = "giai thuat")
t = Tag.objects.get(pk = 1)
t = Tag.objects.get(pk = 2) ==> tat ca id = 2 cua cac model dang khong tao dc ko hieu ly do
t = Tag.objects.get(pk = 3)

l = Lesson.objects.get(pk=3)

l.tags.add(t)
l.save()

l = Lesson.objects.get(pk=1)
l.tags.add(t)
l.save()

t = Tag.objects.get(pk = 1)
t.lesson_set.all()
t.lessonstag.all()